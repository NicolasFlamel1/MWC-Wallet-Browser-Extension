<?php

	// Included files
	require_once __DIR__ . "/mwcwallet.com-master/public_html/backend/common.php";
	require_once __DIR__ . "/mwcwallet.com-master/public_html/backend/language.php";
	require_once __DIR__ . "/mwcwallet.com-master/public_html/backend/resources.php";
	
?>{
	"name": "__MSG_name__",
	"short_name": "__MSG_shortName__",
	"description": "__MSG_description__",
	"version": "<?= escapeString(VERSION_NUMBER) ?>",
	"manifest_version": 3,
	"default_locale": "<?= escapeString(preg_replace('/-/u', "_", DEFAULT_LANGUAGE)); ?>",
	"action": {
		"default_icon": {<?php
		
			// Go through all app icons
			$firstMatch = TRUE;
			foreach(APP_ICONS as $appIcon) {
			
				// Check if app icon parts are provided
				if(count($appIcon) === count(APP_ICON_PARTS)) {
				
					// Check if app icon is a favicon
					if($appIcon[APP_ICON_PARTS["Use As Favicon"]] === TRUE) {
			
						// Display app icon
						echo (($firstMatch === TRUE) ? "" : ",") . PHP_EOL;
						echo "\t\t\t\"" . escapeString($appIcon[APP_ICON_PARTS["X Dimension"]]) . "\": \"" . escapeString(getResource($appIcon[APP_ICON_PARTS["File Path"]])) . "\"";
						$firstMatch = FALSE;
					}
				}
			}
		?>
		
		},
		"default_title": "__MSG_defaultTitle__"
	},
	"icons": {<?php
	
		// Go through all app icons
		$firstMatch = TRUE;
		foreach(APP_ICONS as $appIcon) {
		
			// Check if app icon parts are provided
			if(count($appIcon) === count(APP_ICON_PARTS)) {
			
				// Check if app icon is a favicon
				if($appIcon[APP_ICON_PARTS["Use As Favicon"]] === TRUE) {
				
					// Display app icon
					echo (($firstMatch === TRUE) ? "" : ",") . PHP_EOL;
					echo "\t\t\"" . escapeString($appIcon[APP_ICON_PARTS["X Dimension"]]) . "\": \"" . escapeString(getResource($appIcon[APP_ICON_PARTS["File Path"]])) . "\"";
					$firstMatch = FALSE;
				}
			}
		}
	?>
	
	},
	"content_security_policy": {
		"extension_pages": "script-src 'self' 'wasm-unsafe-eval'"
	},
	"permissions": [
		"unlimitedStorage",
		"storage",
		"scripting",
		"contextMenus",
		"management"
	],
	"background": {
		"service_worker": "./service_worker.js",
		"scripts": [
			"./service_worker.js"
		]
	},
	"cross_origin_opener_policy": {
		"value": "same-origin"
	},
	"cross_origin_embedder_policy": {
		"value": "require-corp"
	},
	"content_scripts": [
		{
			"matches": [
				"<all_urls>"
			],
			"js": [
				"./content_script.js"
			],
			"all_frames": true
		}
	],
	"web_accessible_resources": [
		{
			"matches": [
				"<all_urls>"
			],
			"resources": [
				"api.js"
			]
		}
	],
	"host_permissions": [
		"<all_urls>"
	],
	"protocol_handlers": [
		{
			"protocol": "web+mwchttp",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=MimbleWimble+Coin&Override+Network+Type=Mainnet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+mwchttps",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=MimbleWimble+Coin&Override+Network+Type=Mainnet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+mwcfloonethttp",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=MimbleWimble+Coin&Override+Network+Type=Floonet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+mwcfloonethttps",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=MimbleWimble+Coin&Override+Network+Type=Floonet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+grinhttp",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=Grin&Override+Network+Type=Mainnet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+grinhttps",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=Grin&Override+Network+Type=Mainnet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+grintestnethttp",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=Grin&Override+Network+Type=Testnet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+grintestnethttps",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=Grin&Override+Network+Type=Testnet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+epichttp",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=Epic+Cash&Override+Network+Type=Mainnet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+epichttps",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=Epic+Cash&Override+Network+Type=Mainnet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+epicfloonethttp",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=Epic+Cash&Override+Network+Type=Floonet&Request=Start+Transaction&Recipient+Address=%s"
		},
		{
			"protocol": "web+epicfloonethttps",
			"name": "<?= escapeString(getTranslation('MWC Wallet')); ?>",
			"uriTemplate": "./index.html?Override+Wallet+Type=Epic+Cash&Override+Network+Type=Floonet&Request=Start+Transaction&Recipient+Address=%s"
		}
	]
}
